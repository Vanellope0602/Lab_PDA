Program -> Include PackBody
        -> Include PackList
        -> PackBody
        -> PackList

PackList -> OnePack PackList
        -> OnePack 
        
OnePack-> ModelDecl
        -> PackDecl
        -> PackEq

Provides -> provides Provide ; Provides_1
        -> $

Provides_1 -> Provide ; Provides_1
        -> $

Provide -> const lv6id : Type Provide_1
        -> unsafenode lv6id StaticParams Params returns Params
        -> node lv6id StaticParams Params returns Params
        -> unsafefunction lv6id StaticParams Params returns Params
        -> function lv6id StaticParams Params returns Params
        -> type OneTypeDecl

Provide_1 -> = Expression
        -> $

ModelDecl -> model lv6id Uses needs StaticParamList ; Provides body PackBody end

PackDecl -> package lv6id Uses Provides body PackBody end

Uses -> uses lv6id Uses_1 ; | $

Eq_or_Is -> =
        -> is

PackEq -> package lv6id Eq_or_Is lv6id ( ByNameStaticArgList ) ;

PackBody -> OneDecl PackBody
        -> OneDecl

OneDecl -> NodeDecl
        -> ConstDecl
        -> TypeDecl
        -> ExtNodeDecl

TypedLv6IdsList -> TypedLv6Ids TypedLv6IdsList_1
TypedLv6IdsList_1 -> ; TypedLv6Ids TypedLv6IdsList_1
        -> $ 
        
TypedLv6Ids-> lv6id Uses_1 : Type

TypedValuedLv6Ids -> TypedValuedLv6Id TypedValuedLv6Ids_1
TypedValuedLv6Ids_1 -> ; TypedValuedLv6Id TypedValuedLv6Ids_1
        -> $

TypedValuedLv6Id -> lv6id TypedValuedLv6Id_1
TypedValuedLv6Id_1 -> : Type
        -> , lv6id Uses_1 : Type
        -> : Type = Expression 
        
ConstDecl->const ConstDeclList 

ConstDeclList-> OneConstDecl ; ConstDeclList
        -> OneConstDecl ;

OneConstDecl -> lv6id OneConstDecl_1
OneConstDecl_1 -> : Type
        -> , lv6id { , lv6id } : Type
        -> : Type = Expression
        -> = Expression

TypeDecl -> type TypeDeclList 

TypeDeclList-> OneTypeDecl ; TypeDeclList
        -> OneTypeDecl ;

OneTypeDecl -> lv6id OneTypeDecl_1
        -> $
OneTypeDecl_1 -> = OneTypeDecl_2
OneTypeDecl_2 -> Type
        -> enum { lv6id Uses_1 }
        -> OneTypeDecl_3 { TypedValuedLv6Ids OneTypeDecl_4 }

Uses_1 -> , lv6id Uses_1
        -> $
OneTypeDecl_3 -> struct
        -> $
OneTypeDecl_4 -> ;
        -> $
        
Type -> Type_1 Type_2
Type_1 -> bool
        -> int
        -> real
        -> lv6idref
Type_2 -> ^ Expression Type_2
        -> $

ExtNodeDecl -> ExtNodeDecl_1 lv6id Params returns Params OneTypeDecl_4
ExtNodeDecl_1 -> externfunction
        -> unsafeexternfunction
        -> externnode
        -> unsafeexternnode

NodeDecl -> LocalNode
LocalNode -> node lv6id StaticParams Params returns Params OneTypeDecl_4 LocalDecls Body LocalNode_1
        -> function lv6id StaticParams Params returns Params OneTypeDecl_4 LocalDecls Body LocalNode_1
        -> node lv6id StaticParams NodeProfileOpt = EffectiveNode OneTypeDecl_4
        -> function lv6id StaticParams NodeProfileOpt = EffectiveNode OneTypeDecl_4
        -> unsafenode lv6id StaticParams Params returns Params OneTypeDecl_4 LocalDecls Body LocalNode_1
        -> unsafefunction lv6id StaticParams Params returns Params OneTypeDecl_4 LocalDecls Body LocalNode_1
        -> unsafenode lv6id StaticParams NodeProfileOpt = EffectiveNode OneTypeDecl_4
        -> unsafefunction lv6id StaticParams NodeProfileOpt = EffectiveNode OneTypeDecl_4
LocalNode_1 -> .
        -> ;
        -> $

NodeProfileOpt -> Params returns Params
        -> $
StaticParams -> << StaticParamList >>
        -> $

StaticParamList -> StaticParam StaticParamList_1
StaticParamList_1 -> ; StaticParam StaticParamList_1
        -> $ 
        
StaticParam -> type lv6id
        -> const lv6id : Type
        -> node lv6id Params returns Params
        -> function lv6id Params returns Params
        -> unsafenode lv6id Params returns Params
        -> unsafefunction lv6id Params returns Params

Params -> ( Params_1
Params_1 -> VarDeclList OneTypeDecl_4 )
        -> )

LocalDecls -> LocalDeclList
        -> $

LocalDeclList -> OneLocalDecl LocalDeclList
        -> OneLocalDecl 

OneLocalDecl-> LocalVars
        -> LocalConsts

LocalConsts -> const ConstDeclList

LocalVars -> var VarDeclList ;

VarDeclList -> VarDecl
VarDeclList_1 -> ; VarDecl VarDeclList_1
        -> $

VarDecl -> TypedLv6Ids
        -> TypedLv6Ids when ClockExpr
        -> ( TypedLv6IdsList ) when ClockExpr
